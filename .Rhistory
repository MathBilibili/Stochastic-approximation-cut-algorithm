library(devtools)
devtools::document()
devtools::document()
px<-function(x){
return(sin(x))
}
px(3)
seq(1,10)
px(seq(1,t1))
px(seq(1,10))
ggplot(px(seq(1,10)))
library(ggplot2)
ggplot(px(seq(1,10)))
xx<-data.frame(x=seq(1,10),y=f(seq(1,10)))
xx<-data.frame(x=seq(1,10),y=px(seq(1,10)))
xx
ggplot(data = xx,aes(x=x,y=y))+geom_point()
result<-ggplot(data = xx,aes(x=x,y=y))+geom_point()
print(result)
print(result)
px<-function(x){
return(sin(x))
}
bubu <- function(t1=10,f=px) {
xx<-data.frame(x=seq(1,t1),y=f(seq(1,t1)))
result<-ggplot(data = xx,aes(x=x,y=y))+geom_point()
print(result)
}
bubu(100,px)
devtools::load_all(".")
library(SACut)
?bubu
?SACut
??SACut
SACut
?idmapping
?SACut
ggplot2
ggplot
?ggplot
ggplot2
ggplot
library(SACut)
ggplot
bubu
?bubu
?px
px
bubu(t1=20)
library(ggplot2)
bubu(t1=20)
bubu(t1=100)
px<-function(x){
return((x)^2)
}
bubu(t1=100)
bubu(t1=100,f=px)
rm(px)
library(SACut)
ggplot
Z
Npop
?CutModel
library(SACut)
?CutModel
library(SACut)
?CutModel
library(SACut)
?CutModel
?sin
?arcsin
library(SACut)
x<-CutModel()
x<-CutModel(px=px,py=py)
x
px
py
py(Y,theta = c(1,2),phi=rep(1,13))
d_y
list(px=px,py=py, Z = Z, Y = Y, d_x = d_x, d_y = d_y)
cpp_yes
CutM
CutModel()
CutModel(px = px, py = py, Z = Z, Y = Y, d_x = d_x, d_y = d_y, cpp_yes = FALSE, cpp_package = '')
CutModel(px = cos(), py = py, Z = Z, Y = Y, d_x = d_x, d_y = d_y, cpp_yes = FALSE, cpp_package = '')
px<-cos
CutModel(px = px, py = py, Z = Z, Y = Y, d_x = d_x, d_y = d_y, cpp_yes = FALSE, cpp_package = '')
CutModel(px = px, py = py, Z = Z, Y = Y, d_x = d_x, d_y = d_y, cpp_yes = FALSE, cpp_package = '')->A
A$px(4)
A$px(17)
library(SACut)
?CutModel
library(SACut)
A<-CutModel()
A<-CutModel(px = px, py = py, prox = prox, rprox = rprox, denT = denT, tranT = tranT, Z = Z, Y = Y, d_x = d_x, d_y = d_y, cpp_yes = FALSE, cpp_package = '')
A$prox()
library(truncnorm)
A$prox()
A$prox(c(1,2),c(2,2))
A$prox(c(1,2),c(1,2))
A$prox(c(0.1,0.2),c(0.1,0.2))
A$prox
A$tranT
A$d_y
?hello
A$tranT(2)
A<-function(x){}
A(3)
x<-A(3)
x
library(doParallel)
?makeCluster
?clusterExport
library(SACut)
?ComEnvir
A<-ComEnvir(is_Unix = F,core_num = 2, clusterExport = list('Z'))
A
A<-ComEnvir(is_Unix = F,core_num = 2, clusterExport = list('Z','yl'))
A
list('py','Y','Npop','dmvnorm')
AA<-CutModel(px = px, py = py, prox = prox, rprox = rprox, denT = denT, tranT = tranT, Z = Z, Y = Y, d_x = d_x, d_y = d_y, cpp_yes = FALSE, cpp_package = '')
ss<-AA$px
ss
PX
px
library(SACut)
?BuildNewPhi0
library(SACut)
?BuildNewPhi0
library(SACut)
?BuildNewPhi0
library(SACut)
?LoadNewPhi0
library(SACut)
fread
fread
library(SACut)
?LoadOldPhi0
library(SACut)
?Preliminary_SACut
library(SACut)
?Preliminary_SACut
library(SACut)
?Preliminary_SACut
library(SACut)
?Preliminary_SACut
list('ed',list('py','Y','Npop','dmvnorm'))
list('ed',list('py','Y','Npop','dmvnorm'))[[1]]
list('ed',list('py','Y','Npop','dmvnorm'))[[2]]
list(is.Unix='ed',list('py','Y','Npop','dmvnorm'))[[2]]
list(is.Unix='ed',list('py','Y','Npop','dmvnorm'))
list(is.Unix='ed',sd=list('py','Y','Npop','dmvnorm'))
ComEnvir<-function(is_Unix = TRUE, core_num = 1, clusterExport = list('py','Y','Npop','dmvnorm')){
if(is_Unix){
cl<-makeCluster(core_num,type = 'FORK')
registerDoParallel(cl)
return(list(is_Unix=is_Unix))
}else{
#cl<-makeCluster(detectCores( ))
cl<-makeCluster(core_num)
registerDoParallel(cl)
return(list(is_Unix=is_Unix, clusterExport=clusterExport))
}
}
ComEnvir(is_Unix = F, core_num = 3,clusterExport = list('SS','Y'))->A
library(doParallel)
ComEnvir(is_Unix = F, core_num = 3,clusterExport = list('SS','Y'))->A
A$is_Unix
A$clusterExport
list('py','Y','Npop','dmvnorm')
A$clusterExport
ComEnvir
library(SACut)
?SACut
library(SACut)
library(SACut)
library(SACut)
library(SACut)
library(SACut)
library(SACut)
?SACut
SACut
?SACut
packageDescription(SACut)
packageDescription('SACut')
library(SACut)
packageDescription('SACut')
library(SACut)
